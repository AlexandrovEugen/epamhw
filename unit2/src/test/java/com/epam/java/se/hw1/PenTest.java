package com.epam.java.se.hw1;


import org.junit.Test;
import  com.epam.java.se.hw1.Pen.*;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

public class PenTest {

    @Test
    public void testThatMethodEqualsWorksRight(){

        final Pen aPen = new Pen(100, Color.red, PenType.ballpoint, 140);
        final Pen exactlySamePen = new Pen(100,Pen.Color.red, Pen.PenType.ballpoint, 140);

        final boolean areTheyEquals = aPen.equals(exactlySamePen);
        assertTrue(areTheyEquals);

        final Pen thePen = new Pen(100, Color.red, PenType.ballpoint, 140);
        final Pen anotherPen = new Pen(100, Color.green, PenType.technical, 140);

        final boolean whatAboutThose = thePen.equals(anotherPen);
        assertFalse(whatAboutThose);
    }

    @Test
    public void testThatMethodHashCodeWorksRight(){

        final Pen aPen = new Pen(100, Color.red, PenType.ballpoint, 140);
        final Pen exactlySamePen = new Pen(100, Color.red, PenType.ballpoint, 140);

        assertEquals(aPen.hashCode(), exactlySamePen.hashCode());

        final Pen thePen = new Pen(100, Color.red, PenType.ballpoint, 140);
        final Pen anotherPen = new Pen(100, Color.green, PenType.technical, 140);

        assertFalse(thePen.hashCode() == anotherPen.hashCode());
    }

    @Test
    public void testThatEqualsAndHashCodeAreCorrectlyWorkTogether(){
        final Pen aPen = new Pen(100, Color.red, PenType.ballpoint, 140);
        final Pen exactlySamePen = new Pen(100, Color.red, PenType.ballpoint, 140);


        assertTrue(aPen.hashCode() == exactlySamePen.hashCode());
        assertTrue(aPen.equals(exactlySamePen));
    }

    @Test
    public void testThatMethodToStringWorksRight(){
        Pen aPen = new Pen(100, Color.green, PenType.technical, 140);
        final String benchmark = "Pen, colour inc: green, diameter of rod: 100 mm, type of pen: technical, pen's cost: 1.40 RUR";
        System.out.println(aPen.toString());
        assertEquals(benchmark, aPen.toString());
    }
}